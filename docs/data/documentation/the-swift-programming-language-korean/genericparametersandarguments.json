{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/GenericParametersAndArguments"},"metadata":{"role":"article","title":"제네릭 매개변수와 인자 (Generic Parameters and Arguments)"},"hierarchy":{"paths":[["doc:\/\/org.swift.tsplk\/documentation\/TSPLK"]]},"kind":"article","abstract":[{"type":"text","text":"선언을 일반화하여 구체적인 타입을 추상화합니다."}],"primaryContentSections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"이 챕터에서 제네릭 타입, 함수, 이니셜라이저에 대한 매개변수와 인자를 설명합니다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"제네릭 타입, 함수, 서브스크립트, 이니셜라이저를 선언할 때"},{"type":"text","text":" "},{"text":"해당 제네릭 타입, 함수, 이니셜라이저가 동작할 수 있는 타입 매개변수를 지정합니다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"이러한 타입 매개변수는"},{"type":"text","text":" "},{"text":"제네릭 타입의 인스턴스가 생성되거나 제네릭 함수 또는 이니셜라이저가 호출될 때","type":"text"},{"text":" ","type":"text"},{"text":"실제 구체적인 타입 인자에 의해 대체되는 플레이스 홀더 역할을 합니다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Swift의 제네릭에 대한 개요는 ","type":"text"},{"identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/Generics","type":"reference","isActive":true},{"text":"을 참고바랍니다.","type":"text"}]},{"text":"제네릭 매개변수 절 (Generic Parameter Clause)","type":"heading","anchor":"%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%88-Generic-Parameter-Clause","level":2},{"type":"paragraph","inlineContent":[{"text":"*제네릭 매개변수 절(generic parameter clause)*은 제네릭 타입이나 함수의 타입 매개변수와","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"해당 매개변수에 대한 관련 제약조건과 요구사항을 지정합니다."},{"text":" ","type":"text"},{"text":"제네릭 매개변수 절은 꺾쇠 괄호(<>)로 둘러싸여 있고","type":"text"},{"text":" ","type":"text"},{"text":"다음의 형식을 가집니다:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["<<#generic parameter list#>>"]},{"type":"paragraph","inlineContent":[{"text":"위 형식의 *제네릭 매개변수 목록(generic parameter list)*은 콤마로 구분된 제네릭 매개변수의 목록이고","type":"text"},{"text":" ","type":"text"},{"text":"각 매개변수는 다음의 형식을 가집니다:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["<#type parameter#>: <#constraint#>"]},{"inlineContent":[{"text":"제네릭 매개변수는 *타입 매개변수(type parameter)*와 선택 사항인 *제약조건(constraint)*으로 구성됩니다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"위 형식의 *타입 매개변수(type parameter)*는 단순히 플레이스 홀더 타입의"},{"text":" ","type":"text"},{"type":"text","text":"이름입니다"},{"text":" ","type":"text"},{"text":"(예를 들어 ","type":"text"},{"type":"codeVoice","code":"T"},{"text":", ","type":"text"},{"code":"U","type":"codeVoice"},{"type":"text","text":", "},{"code":"V","type":"codeVoice"},{"type":"text","text":", "},{"code":"Key","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"text":" 등).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"함수나"},{"text":" ","type":"text"},{"text":"이니셜라이저의 시그니처를 포함하여 타입, 함수, 이니셜라이저 선언의","type":"text"},{"type":"text","text":" "},{"text":"나머지 부분에서 타입 매개변수와 모든 연관 타입에 접근할 수 있습니다.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"위 형식의 *제약조건(constraint)*은 타입 매개변수가 특정 클래스를 상속하거나"},{"text":" ","type":"text"},{"text":"프로토콜 또는 프로토콜 합성을 준수해야 함을 지정합니다.","type":"text"},{"type":"text","text":" "},{"text":"예를 들어 아래 제네릭 함수에서 제네릭 매개변수 ","type":"text"},{"code":"T: Comparable","type":"codeVoice"},{"text":"은","type":"text"},{"type":"text","text":" "},{"text":"타입 매개변수 ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":"를 대신하는 모든 타입 인자는 "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" 프로토콜을"},{"text":" ","type":"text"},{"text":"준수해야 함을 나타냅니다.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["func simpleMax<T: Comparable>(_ x: T, _ y: T) -> T {","    if x < y {","        return y","    }","    return x","}"]},{"type":"paragraph","inlineContent":[{"text":"예를 들어 ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":"은 ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":" 프로토콜을 준수하므로","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"이 함수는 두 타입의 인자를 허용합니다. 제네릭 타입과 다르게"},{"text":" ","type":"text"},{"type":"text","text":"제네릭 함수나 이니셜라이저를 사용할 때는 제네릭 인자 절을 지정하지 않습니다."},{"type":"text","text":" "},{"text":"대신 타입 인자는 함수나 이니셜라이저에","type":"text"},{"type":"text","text":" "},{"text":"전달되는 인자의 타입으로부터 추론됩니다.","type":"text"}]},{"syntax":"swift","code":["simpleMax(17, 42) \/\/ T is inferred to be Int","simpleMax(3.14159, 2.71828) \/\/ T is inferred to be Double"],"type":"codeListing"},{"level":3,"type":"heading","text":"제네릭 Where 절 (Generic Where Clauses)","anchor":"%EC%A0%9C%EB%84%A4%EB%A6%AD-Where-%EC%A0%88-Generic-Where-Clauses"},{"type":"paragraph","inlineContent":[{"type":"text","text":"타입 매개변수와 연관 타입에 요구사항을 추가로 지정하려면"},{"text":" ","type":"text"},{"type":"text","text":"타입이나 함수의 본문의"},{"text":" ","type":"text"},{"type":"text","text":"시작 중괄호 직전에 제네릭 "},{"code":"where","type":"codeVoice"},{"type":"text","text":" 절을 포함할 수 있습니다."},{"type":"text","text":" "},{"type":"text","text":"제네릭 "},{"type":"codeVoice","code":"where"},{"text":" 절은 ","type":"text"},{"type":"codeVoice","code":"where"},{"type":"text","text":" 키워드로 구성되고"},{"text":" ","type":"text"},{"text":"다음에 콤마로 구분된 하나 이상의 *요구사항(requirements)*의 목록으로 구성됩니다.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["where <#requirements#>"]},{"type":"paragraph","inlineContent":[{"text":"제네릭 ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" 절에서 *요구사항(requirements)*은 타입 매개변수가 클래스를 상속하거나","type":"text"},{"text":" ","type":"text"},{"text":"프로토콜 또는 프로토콜 합성을 준수해야 함을 지정합니다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"제네릭 "},{"type":"codeVoice","code":"where"},{"type":"text","text":" 절은 타입 매개변수에 대한 간단 제약조건"},{"text":" ","type":"text"},{"type":"text","text":"(예를 들어 "},{"code":"<T: Comparable>","type":"codeVoice"},{"text":"은 ","type":"text"},{"code":"<T> where T: Comparable","type":"codeVoice"},{"text":"과 동일)을","type":"text"},{"text":" ","type":"text"},{"text":"표현하는 편의 문법을 제공하지만,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"타입 매개변수와 연관 타입에"},{"text":" ","type":"text"},{"text":"더 복잡한 제약조건을 제공하기 위해 사용할 수 있습니다.","type":"text"},{"type":"text","text":" "},{"text":"예를 들어 타입 매개변수의 연관 타입을 프로토콜을 준수하도록 제한할 수 있습니다.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"예를 들어 "},{"code":"<S: Sequence> where S.Iterator.Element: Equatable","type":"codeVoice"},{"type":"text","text":"은"},{"text":" ","type":"text"},{"code":"S","type":"codeVoice"},{"type":"text","text":"가 "},{"code":"Sequence","type":"codeVoice"},{"text":" 프로토콜을 준수하고","type":"text"},{"text":" ","type":"text"},{"text":"연관 타입 ","type":"text"},{"code":"S.Iterator.Element","type":"codeVoice"},{"type":"text","text":"는"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":" 프로토콜을 준수하도록 지정합니다.","type":"text"},{"text":" ","type":"text"},{"text":"이 제약조건은 시퀀스의 각 요소가 비교 가능함을 보장합니다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"==","type":"codeVoice"},{"text":" 연산자를 사용하여","type":"text"},{"text":" ","type":"text"},{"text":"두 타입이 동일하다는 요구사항을 지정할 수도 있습니다.","type":"text"},{"text":" ","type":"text"},{"text":"예를 들어 ","type":"text"},{"code":"<S1: Sequence, S2: Sequence> where S1.Iterator.Element == S2.Iterator.Element","type":"codeVoice"},{"text":"은","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"S1"},{"text":"과 ","type":"text"},{"type":"codeVoice","code":"S2"},{"text":"가 ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" 프로토콜을 준수하고"},{"text":" ","type":"text"},{"text":"두 시퀀스의 요소가 같은 타입이어야 한다는 제약조건을 나타냅니다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"타입 매개변수를 대체하는 모든 타입 인자는","type":"text"},{"text":" ","type":"text"},{"text":"타입 매개변수에 있는 모든 제약조건과 요구사항을 충족해야 합니다.","type":"text"}]},{"inlineContent":[{"text":"제네릭 ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" 절은","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"타입 매개변수를 포함하는 선언의 일부로 나타나거나"},{"type":"text","text":" "},{"text":"타입 매개변수를 포함하는 선언 내부에 중첩된 선언의","type":"text"},{"text":" ","type":"text"},{"text":"일부로 나타날 수 있습니다.","type":"text"},{"type":"text","text":" "},{"text":"중첩된 선언에 대한 제네릭 ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" 절은","type":"text"},{"text":" ","type":"text"},{"text":"둘러싸는 선언의 타입 매개변수를 참조할 수 있습니다;","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"그러나"},{"text":" ","type":"text"},{"type":"codeVoice","code":"where"},{"type":"text","text":" 절의 요구사항은"},{"type":"text","text":" "},{"text":"작성된 선언에만 적용됩니다.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"둘러싸는 선언도 ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" 절을 가지고 있으면,","type":"text"},{"text":" ","type":"text"},{"text":"두 절의 요구사항은 결합됩니다.","type":"text"},{"text":" ","type":"text"},{"text":"아래 예시에서 ","type":"text"},{"type":"codeVoice","code":"startsWithZero()"},{"text":"는","type":"text"},{"text":" ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":"가 ","type":"text"},{"code":"SomeProtocol","type":"codeVoice"},{"text":"과 ","type":"text"},{"code":"Numeric","type":"codeVoice"},{"text":" 모두 준수하는 경우에만 가능합니다.","type":"text"}]},{"code":["extension Collection where Element: SomeProtocol {","    func startsWithZero() -> Bool where Element: Numeric {","        return first == .zero","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"타입 매개변수에 다른 제약조건, 요구사항 또는 둘 다 제공하여"},{"text":" ","type":"text"},{"type":"text","text":"제네릭 함수나 이니셜라이저를 오버로드할 수 있습니다."},{"type":"text","text":" "},{"text":"오버로드된 제네릭 함수나 이니셜라이저를 호출할 때","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"컴파일러는 이러한 제약조건을 사용하여 호출할 오버로드된"},{"type":"text","text":" "},{"text":"함수나 이니셜라이저를 결정합니다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"제네릭 ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" 절에 대한 자세한 정보와","type":"text"},{"text":" ","type":"text"},{"text":"제네릭 함수 선언의 예시를 보려면","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/Generics#%EC%A0%9C%EB%84%A4%EB%A6%AD-Where-%EC%A0%88-Generic-Where-Clauses","type":"reference","isActive":true},{"text":"을 참고바랍니다.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"generic-parameter-clause","type":"text"}]},{"text":" → ","type":"text"},{"inlineContent":[{"code":"<","type":"codeVoice"}],"type":"strong"},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"generic-parameter-list"}],"type":"emphasis"},{"type":"text","text":" "},{"inlineContent":[{"code":">","type":"codeVoice"}],"type":"strong"},{"text":" ","type":"text"},{"text":"\n","type":"text"},{"type":"emphasis","inlineContent":[{"text":"generic-parameter-list","type":"text"}]},{"type":"text","text":" → "},{"type":"emphasis","inlineContent":[{"type":"text","text":"generic-parameter"}]},{"text":" | ","type":"text"},{"inlineContent":[{"type":"text","text":"generic-parameter"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"code":",","type":"codeVoice"}]},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"generic-parameter-list"}]},{"type":"text","text":" "},{"text":"\n","type":"text"},{"type":"emphasis","inlineContent":[{"text":"generic-parameter","type":"text"}]},{"text":" → ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"type-name","type":"text"}]},{"text":" ","type":"text"},{"type":"text","text":"\n"},{"type":"emphasis","inlineContent":[{"text":"generic-parameter","type":"text"}]},{"text":" → ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"type-name","type":"text"}]},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"code":":","type":"codeVoice"}]},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type-identifier"}]},{"text":" ","type":"text"},{"type":"text","text":"\n"},{"type":"emphasis","inlineContent":[{"type":"text","text":"generic-parameter"}]},{"type":"text","text":" → "},{"type":"emphasis","inlineContent":[{"text":"type-name","type":"text"}]},{"text":" ","type":"text"},{"inlineContent":[{"code":":","type":"codeVoice"}],"type":"strong"},{"text":" ","type":"text"},{"inlineContent":[{"text":"protocol-composition-type","type":"text"}],"type":"emphasis"}]},{"inlineContent":[{"inlineContent":[{"text":"generic-where-clause","type":"text"}],"type":"emphasis"},{"text":" → ","type":"text"},{"inlineContent":[{"code":"where","type":"codeVoice"}],"type":"strong"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"requirement-list","type":"text"}]},{"text":" ","type":"text"},{"text":"\n","type":"text"},{"inlineContent":[{"type":"text","text":"requirement-list"}],"type":"emphasis"},{"text":" → ","type":"text"},{"inlineContent":[{"type":"text","text":"requirement"}],"type":"emphasis"},{"text":" | ","type":"text"},{"inlineContent":[{"text":"requirement","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"inlineContent":[{"code":",","type":"codeVoice"}],"type":"strong"},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"requirement-list"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"text","text":"\n"},{"type":"emphasis","inlineContent":[{"text":"requirement","type":"text"}]},{"text":" → ","type":"text"},{"inlineContent":[{"text":"conformance-requirement","type":"text"}],"type":"emphasis"},{"text":" | ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"same-type-requirement","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"conformance-requirement"}],"type":"emphasis"},{"text":" → ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type-identifier"}]},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"code":":","type":"codeVoice"}]},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type-identifier"}]},{"text":" ","type":"text"},{"type":"text","text":"\n"},{"inlineContent":[{"type":"text","text":"conformance-requirement"}],"type":"emphasis"},{"text":" → ","type":"text"},{"inlineContent":[{"type":"text","text":"type-identifier"}],"type":"emphasis"},{"text":" ","type":"text"},{"inlineContent":[{"type":"codeVoice","code":":"}],"type":"strong"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"protocol-composition-type","type":"text"}]},{"text":" ","type":"text"},{"text":"\n","type":"text"},{"type":"emphasis","inlineContent":[{"text":"same-type-requirement","type":"text"}]},{"type":"text","text":" → "},{"inlineContent":[{"type":"text","text":"type-identifier"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"code":"==","type":"codeVoice"}]},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"type"}],"type":"emphasis"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Grammar of a generic parameter clause"},{"text":"제네릭 인자 절 (Generic Argument Clause)","level":2,"anchor":"%EC%A0%9C%EB%84%A4%EB%A6%AD-%EC%9D%B8%EC%9E%90-%EC%A0%88-Generic-Argument-Clause","type":"heading"},{"inlineContent":[{"text":"*제네릭 인자 절(generic argument clause)*은 제네릭 타입의","type":"text"},{"text":" ","type":"text"},{"text":"타입 인자를 지정합니다.","type":"text"},{"text":" ","type":"text"},{"text":"제네릭 인자 절은 꺾쇠 괄호(<>)로 둘러싸여져 있고","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"다음의 형식을 가집니다:"}],"type":"paragraph"},{"code":["<<#generic argument list#>>"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"위 형식의 *제네릭 인자 목록(generic argument list)*은 콤마로 구분된 타입 인자의 목록입니다.","type":"text"},{"text":" ","type":"text"},{"text":"*타입 인자(type argument)*는 제네릭 타입의 제네릭 매개변수 절에 있는","type":"text"},{"text":" ","type":"text"},{"text":"해당 타입 매개변수를 대체하는 실제 구체적인 타입의 이름입니다.","type":"text"},{"text":" ","type":"text"},{"text":"그 결과는 해당 제네릭 타입의 특수 버전이 됩니다.","type":"text"},{"text":" ","type":"text"},{"text":"아래 예시는 Swift 표준 라이브러리의","type":"text"},{"text":" ","type":"text"},{"text":"제네릭 딕셔너리 타입의 단순화한 버전을 보여줍니다.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct Dictionary<Key: Hashable, Value>: Collection, ExpressibleByDictionaryLiteral {","    \/* ... *\/","}"]},{"inlineContent":[{"text":"제네릭 ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":" 타입의 특수한 버전인 ","type":"text"},{"code":"Dictionary<String, Int>","type":"codeVoice"},{"text":"는","type":"text"},{"text":" ","type":"text"},{"text":"제네릭 매개변수 ","type":"text"},{"code":"Key: Hashable","type":"codeVoice"},{"text":"과 ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":"를"},{"text":" ","type":"text"},{"text":"구체적인 타입 인자 ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"과 "},{"code":"Int","type":"codeVoice"},{"text":"로 대체하여 형성됩니다.","type":"text"},{"text":" ","type":"text"},{"text":"각 타입 인자는 제네릭 ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" 절에 지정된 추가 요구사항을 포함하여","type":"text"},{"text":" ","type":"text"},{"text":"자신이 대체하는 제네릭 매개변수의 모든 제약조건을 충족해야 합니다.","type":"text"},{"text":" ","type":"text"},{"text":"위의 예시에서 ","type":"text"},{"code":"Key","type":"codeVoice"},{"text":" 타입 매개변수는 ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" 프로토콜을 준수하도록 제약되므로"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String"},{"text":"도 ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" 프로토콜을 준수해야 합니다.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"타입 매개변수 자체를 제네릭 타입의 특수한 버전인","type":"text"},{"text":" ","type":"text"},{"text":"타입 인자로 대체할 수도 있습니다(적절한 제약조건과 요구사항을 충족하는 경우).","type":"text"},{"type":"text","text":" "},{"text":"예를 들어 ","type":"text"},{"code":"Array<Element>","type":"codeVoice"},{"type":"text","text":"의 타입 매개변수 "},{"code":"Element","type":"codeVoice"},{"text":"를","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"배열의 특수한 버전인 "},{"code":"Array<Int>","type":"codeVoice"},{"text":"로 대체하여","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"요소가 정수인 배열을 형성할 수 있습니다."}]},{"syntax":"swift","code":["let arrayOfArrays: Array<Array<Int>> = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/GenericParametersAndArguments#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%88-Generic-Parameter-Clause","type":"reference","isActive":true},{"text":"에서 언급했듯이","type":"text"},{"text":" ","type":"text"},{"text":"제네릭 함수나 이니셜라이저의","type":"text"},{"text":" ","type":"text"},{"text":"타입 인자로 지정하기 위해 제네릭 인자 절을 사용하지 않습니다.","type":"text"}]},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"generic-argument-clause","type":"text"}]},{"text":" → ","type":"text"},{"inlineContent":[{"type":"codeVoice","code":"<"}],"type":"strong"},{"text":" ","type":"text"},{"inlineContent":[{"text":"generic-argument-list","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"code":">","type":"codeVoice"}]},{"type":"text","text":" "},{"type":"text","text":"\n"},{"inlineContent":[{"type":"text","text":"generic-argument-list"}],"type":"emphasis"},{"text":" → ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"generic-argument","type":"text"}]},{"type":"text","text":" | "},{"type":"emphasis","inlineContent":[{"text":"generic-argument","type":"text"}]},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"code":",","type":"codeVoice"}]},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"generic-argument-list","type":"text"}]},{"type":"text","text":" "},{"text":"\n","type":"text"},{"inlineContent":[{"text":"generic-argument","type":"text"}],"type":"emphasis"},{"text":" → ","type":"text"},{"inlineContent":[{"text":"type","type":"text"}],"type":"emphasis"}]}],"type":"aside","style":"note","name":"Grammar of a generic argument clause"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Learn more about using ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/support\/beta-software\/"},{"text":".","type":"text"}]}],"type":"aside","style":"note","name":"Beta Software"}],"kind":"content"}],"references":{"doc://org.swift.tsplk/documentation/TSPLK":{"abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tsplk\/documentation\/TSPLK","title":"The Swift Programming Language (6.2 Beta) (한국어)","url":"\/documentation\/tsplk","role":"collection"},"https://developer.apple.com/support/beta-software/":{"type":"link","title":"Apple’s beta software","titleInlineContent":[{"text":"Apple’s beta software","type":"text"}],"identifier":"https:\/\/developer.apple.com\/support\/beta-software\/","url":"https:\/\/developer.apple.com\/support\/beta-software\/"},"doc://org.swift.tsplk/documentation/The-Swift-Programming-Language-Korean/Generics#%EC%A0%9C%EB%84%A4%EB%A6%AD-Where-%EC%A0%88-Generic-Where-Clauses":{"kind":"section","abstract":[],"identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/Generics#%EC%A0%9C%EB%84%A4%EB%A6%AD-Where-%EC%A0%88-Generic-Where-Clauses","url":"\/documentation\/the-swift-programming-language-korean\/generics#%EC%A0%9C%EB%84%A4%EB%A6%AD-Where-%EC%A0%88-Generic-Where-Clauses","title":"제네릭 Where 절 (Generic Where Clauses)","type":"topic"},"doc://org.swift.tsplk/documentation/The-Swift-Programming-Language-Korean/Generics":{"url":"\/documentation\/the-swift-programming-language-korean\/generics","type":"topic","identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/Generics","title":"제네릭 (Generics)","abstract":[{"text":"여러 타입에 대해 동작하는 코드를 작성하고 해당 타입의 요구사항을 지정합니다.","type":"text"}],"role":"article","kind":"article"},"doc://org.swift.tsplk/documentation/The-Swift-Programming-Language-Korean/GenericParametersAndArguments#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%88-Generic-Parameter-Clause":{"url":"\/documentation\/the-swift-programming-language-korean\/genericparametersandarguments#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%88-Generic-Parameter-Clause","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tsplk\/documentation\/The-Swift-Programming-Language-Korean\/GenericParametersAndArguments#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%88-Generic-Parameter-Clause","title":"제네릭 매개변수 절 (Generic Parameter Clause)"}}}